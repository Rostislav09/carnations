{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/Big project/car-nation/src/\\u0421omponents/pdfUploadPage/PdfUploadPage.js\",\n  _s = $RefreshSig$();\n// src/Сomponents/pdfUploadPage/PDFUploadPage.js\nimport React from \"react\";\nimport pdflogo from '../../resources/pdf/download.png';\nimport './PdfUploadPage.css';\nimport HeaderPdf from \"./HeaderPdf\";\nimport Footer from \"./Footer\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFUploadPage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n    try {\n      const response = await fetch(\"/upload-pdf\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        // Данные успешно загружены, можно обновить состояние для отображения таблицы\n      } else {\n        console.error(\"Error uploading PDF\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading PDF\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerPdf\",\n      children: /*#__PURE__*/_jsxDEV(HeaderPdf, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".pdf\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-lg\",\n            onClick: handleFileUpload,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"ADD PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: pdflogo,\n              alt: \"download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFUploadPage, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = PDFUploadPage;\nexport default PDFUploadPage;\nvar _c;\n$RefreshReg$(_c, \"PDFUploadPage\");","map":{"version":3,"names":["React","pdflogo","HeaderPdf","Footer","useState","jsxDEV","_jsxDEV","PDFUploadPage","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleFileUpload","formData","FormData","append","response","fetch","method","body","ok","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/user1/Desktop/Big project/car-nation/src/Сomponents/pdfUploadPage/PdfUploadPage.js"],"sourcesContent":["// src/Сomponents/pdfUploadPage/PDFUploadPage.js\nimport React from \"react\";\nimport pdflogo from '../../resources/pdf/download.png'\nimport './PdfUploadPage.css'\nimport HeaderPdf from \"./HeaderPdf\";\nimport Footer from \"./Footer\";\nimport { useState } from \"react\";\n\n\n\nconst PDFUploadPage = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleFileUpload = async () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append(\"pdfFile\", selectedFile);\n\n    try {\n      const response = await fetch(\"/upload-pdf\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        // Данные успешно загружены, можно обновить состояние для отображения таблицы\n      } else {\n        console.error(\"Error uploading PDF\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading PDF\", error);\n    }\n  };\n\n  return (\n    <div className=\"pdf-upload-page\">\n      <div className=\"headerPdf\">\n        <HeaderPdf/>\n      </div>\n      \n      <div className=\"container\">\n        <div className=\"row justify-content-center mt-5\">\n          <div className=\"col-md-6 text-center\">\n            <input type=\"file\" accept=\".pdf\" onChange={handleFileChange} />\n            <button className=\"btn btn-lg\" onClick={handleFileUpload}>\n              <p>ADD PDF</p>\n              <img src={pdflogo} alt=\"download\"/>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <Footer/>\n    </div>\n  );\n};\n\nexport default PDFUploadPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}